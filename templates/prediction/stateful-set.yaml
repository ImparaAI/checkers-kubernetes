apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prediction
spec:
  selector:
    matchLabels:
      app: prediction
  serviceName: prediction
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prediction
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: prediction
        {{- if .Values.prediction.nvidia_gpu }}
        image: imparaai/checkers-prediction:nvidia
        {{- else }}
        image: imparaai/checkers-prediction:cpu
        {{- end }}
        imagePullPolicy: Always
        {{- if .Values.prediction.nvidia_gpu }}
        resources:
          limits:
            nvidia.com/gpu: 1
        {{- else }}
        resources:
          requests:
            cpu: 2
        {{- end }}
        ports:
        - containerPort: 80
          name: http
        env:
          - name: USE_GPU
            value: {{ .Values.prediction.nvidia_gpu | default "false" | quote}}
        readinessProbe:
          exec:
            command:
            - cat
            - /var/healthy
          initialDelaySeconds: 3
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /ping
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
          - name: sqlite-data
            mountPath: /var/app/instance/sqlite
      {{- if .Values.prediction.development_volume }}
          - name: prediction
            mountPath: /var/app
      volumes:
      - name: prediction
        hostPath:
          path: {{ .Values.prediction.development_volume }}
      {{- end }}
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: sqlite-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Mi